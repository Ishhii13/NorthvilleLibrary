#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NorthvilleLibrary
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NorthvilleLibrary")]
	public partial class LINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    #endregion
		
		public LINQDataContext() : 
				base(global::NorthvilleLibrary.Properties.Settings.Default.NorthvilleLibraryConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Student_ID;
		
		private string _Student_Surname;
		
		private string _Student_FirstName;
		
		private string _Student_Course_ID;
		
		private string _Student_ContactNo;
		
		private string _Student_Email;
		
		private string _Student_Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudent_IDChanging(string value);
    partial void OnStudent_IDChanged();
    partial void OnStudent_SurnameChanging(string value);
    partial void OnStudent_SurnameChanged();
    partial void OnStudent_FirstNameChanging(string value);
    partial void OnStudent_FirstNameChanged();
    partial void OnStudent_Course_IDChanging(string value);
    partial void OnStudent_Course_IDChanged();
    partial void OnStudent_ContactNoChanging(string value);
    partial void OnStudent_ContactNoChanged();
    partial void OnStudent_EmailChanging(string value);
    partial void OnStudent_EmailChanged();
    partial void OnStudent_PasswordChanging(string value);
    partial void OnStudent_PasswordChanged();
    #endregion
		
		public Student()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Surname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Student_Surname
		{
			get
			{
				return this._Student_Surname;
			}
			set
			{
				if ((this._Student_Surname != value))
				{
					this.OnStudent_SurnameChanging(value);
					this.SendPropertyChanging();
					this._Student_Surname = value;
					this.SendPropertyChanged("Student_Surname");
					this.OnStudent_SurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Student_FirstName
		{
			get
			{
				return this._Student_FirstName;
			}
			set
			{
				if ((this._Student_FirstName != value))
				{
					this.OnStudent_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._Student_FirstName = value;
					this.SendPropertyChanged("Student_FirstName");
					this.OnStudent_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Course_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Student_Course_ID
		{
			get
			{
				return this._Student_Course_ID;
			}
			set
			{
				if ((this._Student_Course_ID != value))
				{
					this.OnStudent_Course_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_Course_ID = value;
					this.SendPropertyChanged("Student_Course_ID");
					this.OnStudent_Course_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ContactNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Student_ContactNo
		{
			get
			{
				return this._Student_ContactNo;
			}
			set
			{
				if ((this._Student_ContactNo != value))
				{
					this.OnStudent_ContactNoChanging(value);
					this.SendPropertyChanging();
					this._Student_ContactNo = value;
					this.SendPropertyChanged("Student_ContactNo");
					this.OnStudent_ContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Student_Email
		{
			get
			{
				return this._Student_Email;
			}
			set
			{
				if ((this._Student_Email != value))
				{
					this.OnStudent_EmailChanging(value);
					this.SendPropertyChanging();
					this._Student_Email = value;
					this.SendPropertyChanged("Student_Email");
					this.OnStudent_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Student_Password
		{
			get
			{
				return this._Student_Password;
			}
			set
			{
				if ((this._Student_Password != value))
				{
					this.OnStudent_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Student_Password = value;
					this.SendPropertyChanged("Student_Password");
					this.OnStudent_PasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Staff_ID;
		
		private string _Staff_Surname;
		
		private string _Staff_FirstName;
		
		private string _Staff_Email;
		
		private string _Staff_Contact;
		
		private string _Staff_Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaff_IDChanging(string value);
    partial void OnStaff_IDChanged();
    partial void OnStaff_SurnameChanging(string value);
    partial void OnStaff_SurnameChanged();
    partial void OnStaff_FirstNameChanging(string value);
    partial void OnStaff_FirstNameChanged();
    partial void OnStaff_EmailChanging(string value);
    partial void OnStaff_EmailChanged();
    partial void OnStaff_ContactChanging(string value);
    partial void OnStaff_ContactChanged();
    partial void OnStaff_PasswordChanging(string value);
    partial void OnStaff_PasswordChanged();
    #endregion
		
		public Staff()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Staff_ID
		{
			get
			{
				return this._Staff_ID;
			}
			set
			{
				if ((this._Staff_ID != value))
				{
					this.OnStaff_IDChanging(value);
					this.SendPropertyChanging();
					this._Staff_ID = value;
					this.SendPropertyChanged("Staff_ID");
					this.OnStaff_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Surname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Staff_Surname
		{
			get
			{
				return this._Staff_Surname;
			}
			set
			{
				if ((this._Staff_Surname != value))
				{
					this.OnStaff_SurnameChanging(value);
					this.SendPropertyChanging();
					this._Staff_Surname = value;
					this.SendPropertyChanged("Staff_Surname");
					this.OnStaff_SurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Staff_FirstName
		{
			get
			{
				return this._Staff_FirstName;
			}
			set
			{
				if ((this._Staff_FirstName != value))
				{
					this.OnStaff_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._Staff_FirstName = value;
					this.SendPropertyChanged("Staff_FirstName");
					this.OnStaff_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Staff_Email
		{
			get
			{
				return this._Staff_Email;
			}
			set
			{
				if ((this._Staff_Email != value))
				{
					this.OnStaff_EmailChanging(value);
					this.SendPropertyChanging();
					this._Staff_Email = value;
					this.SendPropertyChanged("Staff_Email");
					this.OnStaff_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Contact", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Staff_Contact
		{
			get
			{
				return this._Staff_Contact;
			}
			set
			{
				if ((this._Staff_Contact != value))
				{
					this.OnStaff_ContactChanging(value);
					this.SendPropertyChanging();
					this._Staff_Contact = value;
					this.SendPropertyChanged("Staff_Contact");
					this.OnStaff_ContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Staff_Password
		{
			get
			{
				return this._Staff_Password;
			}
			set
			{
				if ((this._Staff_Password != value))
				{
					this.OnStaff_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Staff_Password = value;
					this.SendPropertyChanged("Staff_Password");
					this.OnStaff_PasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
